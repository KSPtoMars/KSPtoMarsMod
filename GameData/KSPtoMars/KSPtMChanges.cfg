//This is the .cfg for all MM changes to existing parts for KSP to Mars.
//Contributors:  Charlie_Zulu, [add your name here]

@PART[Engineer*]:FOR[KSPtM]
//Removal of all Kerbal Engineer Redux parts from the part list and tech tree
{
	%category = -1
	%TechRequired = hidden
}
@PART[mumech*]:FOR[KSPtM]
//Removal of all MechJeb parts from the part list and tech tree
{
	%category = -1
	%TechRequired = hidden
}
@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[MechJeb]:Final
//Addition of MechJeb to all command parts, if MechJeb is installed
{
	MODULE
    {
        name = MechJebCore
        MechJebLocalSettings {
            MechJebModuleCustomWindowEditor { unlockTechs = flightControl }
            MechJebModuleSmartASS { unlockTechs = flightControl }
            MechJebModuleManeuverPlanner { unlockTechs = advFlightControl }
            MechJebModuleNodeEditor { unlockTechs = advFlightControl }
            MechJebModuleTranslatron { unlockTechs = advFlightControl }
            MechJebModuleWarpHelper { unlockTechs = advFlightControl }
            MechJebModuleAttitudeAdjustment { unlockTechs = advFlightControl }
            MechJebModuleThrustWindow { unlockTechs = advFlightControl }
            MechJebModuleRCSBalancerWindow { unlockTechs = advFlightControl }
            MechJebModuleRoverWindow { unlockTechs = fieldScience }
            MechJebModuleAscentGuidance { unlockTechs = unmannedTech }
            MechJebModuleLandingGuidance { unlockTechs = unmannedTech }
            MechJebModuleSpaceplaneGuidance { unlockTechs = unmannedTech }
            MechJebModuleDockingGuidance { unlockTechs = advUnmanned }
            MechJebModuleRendezvousAutopilotWindow { unlockTechs = advUnmanned }
            MechJebModuleRendezvousGuidance { unlockTechs = advUnmanned }
        }
    }
}
@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[kOS]:FOR[KSPtM]
//Addition of kOSProcessor to all command parts.  Interim solution until we write part-specific patches
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 10000000
	}
}
@PART[*]:HAS[@MODULE[ModuleRTAntenna]]:NEEDS[Telemachus]:Final
//Addition of Telemachus to all antennas, if Telemachus is installed
{
        MODULE
    {
        name = TelemachusDataLink
    }
}
@PART[TaurusHCV]:FOR[KSPTM]:AFTER[RealismOverhaul]
{
	//Fix retrorocket/LES rocket behaviour.
	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = LESDeploy
		allowManualControl = no
	}
}

@PART[*]:FINAL
{
	//Add part name to description for easier identification.
	@description = #$description$ $/name$
}

RESOURCE_DEFINITION
{
	//Add Pu-238 for JDiminishingRTG
    name        = Plutonium238
    density     = 0.019816 //Doesn't really matter, since the MHW-RTG only uses 1 fuel type...
    unitcost    = 80 //This doesn't really matter all that much.
    flowmode    = NO_FLOW
    transfer    = NONE
    isTweakable = true
}

RTGFUELCONFIG 
{
	//Add Pu-238 for JDiminishingRTG
    name     = Plutonium238 // MUST have matching name in RESOURCE_DEFINITION
    halflife = 301.84         // in kerbal years (earth*3.43)
    pep      = 5.3333333 // Power density of the material (Watts/kilogram).  Calculated to give 157 W at mission start, and decreased by a factor of 10^-3, since it was performing incorrectly.  KSP uses t for mass, not kg... ~C_Z
}

@PART[rtg]:FOR[KSPtM]:AFTER[JDiminishingRTG]
{
	//JDiminishingRTG support for MHW-RTG
	@mass = 0.0332 //37.7kg-4.5kg
    !MODULE[ModuleGenerator] {}
	@MODULE[ModuleDiminishingRTG]
    {
        @efficiency = 0.065416667 // factor (0..1) of 'pep' into ElectricCharge 
        @volume = 0.22708922   // roughly, in deciliters. ("units").  Units are actually L, which has been corrected for ~C_Z
		
    }
}

@PART[rtg]:FINAL
{
	//Additional JDiminishingRTG support for MHW-RTG, changing mass to account for addition of 4.5kg of Pu-238
	@mass = 0.0332 //37.7kg-4.5kg
}

@PART[TaurusHCV]:FOR[KSPTM]:AFTER[RealismOverhaul]
{	
	//Add CoMShifter for Re-entry.  I'd personally rather do this with fuel tanks and actual ballast, but we can work on that later.  
	+MODULE
	{
		+name = CoMShifter
		+DescentModeCoM = 0.0, 0.0, -0.2
	}
}

@PART[mk2CargoBayS]:FOR[KSPTM]
{
	//Sample addition of Tweakscale support.
	MODULE
	{
		name = TweakScale
		type = free
		defaultScale = 100
	}
}
