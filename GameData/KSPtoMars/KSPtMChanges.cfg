//This is the .cfg for all MM changes to existing parts for KSP to Mars.
//Contributors:  Charlie_Zulu, [add your name here]

@PART[Engineer*]:FOR[KSPtM]
//Removal of all Kerbal Engineer Redux parts from the part list and tech tree
{
	%category = -1
	%TechRequired = hidden
}
@PART[mumech*]:FOR[KSPtM]
//Removal of all MechJeb parts from the part list and tech tree
{
	%category = -1
	%TechRequired = hidden
}
@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[MechJeb]:Final
//Addition of MechJeb to all command parts, if MechJeb is installed
{
	MODULE
    {
        name = MechJebCore
        MechJebLocalSettings {
            MechJebModuleCustomWindowEditor { unlockTechs = flightControl }
            MechJebModuleSmartASS { unlockTechs = flightControl }
            MechJebModuleManeuverPlanner { unlockTechs = advFlightControl }
            MechJebModuleNodeEditor { unlockTechs = advFlightControl }
            MechJebModuleTranslatron { unlockTechs = advFlightControl }
            MechJebModuleWarpHelper { unlockTechs = advFlightControl }
            MechJebModuleAttitudeAdjustment { unlockTechs = advFlightControl }
            MechJebModuleThrustWindow { unlockTechs = advFlightControl }
            MechJebModuleRCSBalancerWindow { unlockTechs = advFlightControl }
            MechJebModuleRoverWindow { unlockTechs = fieldScience }
            MechJebModuleAscentGuidance { unlockTechs = unmannedTech }
            MechJebModuleLandingGuidance { unlockTechs = unmannedTech }
            MechJebModuleSpaceplaneGuidance { unlockTechs = unmannedTech }
            MechJebModuleDockingGuidance { unlockTechs = advUnmanned }
            MechJebModuleRendezvousAutopilotWindow { unlockTechs = advUnmanned }
            MechJebModuleRendezvousGuidance { unlockTechs = advUnmanned }
        }
    }
}
@PART[*]:HAS[@MODULE[ModuleCommand]]:NEEDS[kOS]:FOR[KSPtM]
//Addition of kOSProcessor to all command parts.  Interim solution until we write part-specific patches
{
	MODULE
	{
		name = kOSProcessor
		diskSpace = 10000000
	}
}
@PART[*]:HAS[@MODULE[ModuleRTAntenna]]:NEEDS[Telemachus]:Final
//Addition of Telemachus to all antennas, if Telemachus is installed
{
        MODULE
    {
        name = TelemachusDataLink
    }
}
@PART[TaurusHCV]:FOR[KSPTM]:AFTER[RealismOverhaul]
{
	//Fix retrorocket/LES rocket behaviour.
	MODULE
	{
		name = ModuleAnimateGeneric
		animationName = LESDeploy
		allowManualControl = no
	}
}

@PART[*]:FINAL
{
	//Add part name to description for easier identification.
	@description = #$description$ $/name$
}

RESOURCE_DEFINITION
{
	//Add Pu-238 for JDiminishingRTG
    name        = Plutonium238
    density     = 0.019816 //Doesn't really matter, since the MHW-RTG only uses 1 fuel type...
    unitcost    = 80 //This doesn't really matter all that much.
    flowmode    = NO_FLOW
    transfer    = NONE
    isTweakable = true
}

RTGFUELCONFIG 
{
	//Add Pu-238 for JDiminishingRTG
    name     = Plutonium238 // MUST have matching name in RESOURCE_DEFINITION
    halflife = 301.84         // in kerbal years (earth*3.43)
    pep      = 5.3333333 // Power density of the material (Watts/kilogram).  Calculated to give 157 W at mission start, and decreased by a factor of 10^-3, since it was performing incorrectly.  KSP uses t for mass, not kg... ~C_Z
}

@PART[rtg]:FOR[KSPtM]:AFTER[JDiminishingRTG]
{
	//JDiminishingRTG support for MHW-RTG
	@mass = 0.0332 //37.7kg-4.5kg
    !MODULE[ModuleGenerator] {}
	@MODULE[ModuleDiminishingRTG]
    {
        @efficiency = 0.065416667 // factor (0..1) of 'pep' into ElectricCharge 
        @volume = 0.22708922   // roughly, in deciliters. ("units").  Units are actually L, which has been corrected for ~C_Z
		
    }
}

@PART[rtg]:FINAL
{
	//Additional JDiminishingRTG support for MHW-RTG, changing mass to account for addition of 4.5kg of Pu-238
	@mass = 0.0332 //37.7kg-4.5kg
}

@PART[TaurusHCV]:FOR[KSPTM]:AFTER[RealismOverhaul]
{	
	//Add CoMShifter for Re-entry.  I'd personally rather do this with fuel tanks and actual ballast, but we can work on that later.  
	+MODULE
	{
		+name = CoMShifter
		+DescentModeCoM = 0.0, 0.0, -0.2
	}
}

@PART[mk2CargoBayS]:FOR[KSPTM]
{
	//Sample addition of Tweakscale support.
	MODULE
	{
		name = TweakScale
		type = free
		defaultScale = 100
	}
}

@PART[liquidEngineMiniRescale]:AFTER[RealismOverhaul]
{
	//Fix model
	%MODEL
	{
		%model = AIES_Aerospace/Engine/AIESenginegalaxvr2/model
		%scale = 3.2426875, 3.2426875, 3.2426875
	}
	@scale = 3.2426875
	%node_stack_top = 0.0, 0.15, 0.0, 0.0, 1.0, 0.0, 1
	%node_stack_bottom = 0.0, -0.48, 0.0, 0.0, -1.0, 0.0, 1
	!node_attach = DELETE
	//Add pedantry
	@title = Aestus II / RS-72 [1.5m]
	%manufacturer = EADS Astrium
	@description = Small MMH/NTO upper stage rocket engine, designed as a collaboration between Pratt & Whitney Rocketdyne and Airbus DS, Ottobrunn.  Based off of the design of the Ariane 5's Aestus upper stage engine, with the addition of a turbopump and power plant developed by PWR.
	//Fix ignition count
	@MODULE[ModuleEngines*]
	{
		@ignitions = 20 //Based on data from http://cs.astrium.eads.net/sp/launcher-propulsion/rocket-engines/aestus-rs72-rocket-engine.html
	}
}

@PART[NP_FreyjaCapsule]:FOR[KSPTM]:AFTER[RealismOverhaul]
{
	//Fix Freyja node positions
	@node_stack_top = 0.0, 1.49, 0.0, 0.0, 1.0, 0.0, 2 //+[0, 0.4, 0, 0, 0, 0, 0]
	@node_stack_bottom = 0.0, -0.202, 0.0, 0.0, -1.0, 0.0, 6 //+[0, 0.4, 0, 0, 0, 0, 0]
}
@PART[inflato1]:FOR[KSPTM]
{
	//Changing oxygen = 1895036, food = 20838
	@MODULE[ModuleFuelTanks]
	{
		@TANK[Food]
		{
			amount = 20838
			maxAmount = 20838
		}
		@TANK[Oxygen]
		{
			amount = 1895036
			maxAmount = 1895036
		}
	}

}
@PART[crewCabin]:FINAL
{
	//Changing oxygen = 710639, food = 7815, water = 4800.
	@MODULE[ModuleFuelTanks]
	{
		@TANK[Food]
		{
			amount = 7815
			maxAmount = 7815
		}
		@TANK[Oxygen]
		{
			amount = 710639
			maxAmount = 710639
		}
		@TANK[Water]
		{
			amount = 4800
			maxAmount = 4800
		}
	}

}
+PART[NP_FreyjaCapsule]:AFTER[RealismOverhaul]
{
	//Make changes to Freyja Capsule for use in the MAV
	@name = KSPtM_Freyja4ManCapsule
	@mass = 4.75
	@title = KSPtM MAV Crew Capsule
	@node_stack_top = 0.0, 1.49, 0.0, 0.0, 1.0, 0.0, 2 //+[0, 0.4, 0, 0, 0, 0, 0]
	@node_stack_bottom = 0.0, -0.202, 0.0, 0.0, -1.0, 0.0, 6 //+[0, 0.4, 0, 0, 0, 0, 0]
	@maxtemp = 1300
	@CrewCapacity = 4
	@MODULE[ModuleFuelTanks]
	{
		@volume = 15000
	}
	!MODULE[ModuleReactionWheel]
	{
	}
	!MODULE[ModuleAblator]
	{
	}
	!RESOURCE[Ablator]
	{
	}
}

+PART[microEngineex1sat]
{
	//Add a waste vent port.  Values are... approximate.
	@name = KSPTMventPort

	@TechRequired = specializedElectrics
	@entryCost = 38200
	@cost = 3300
	@category = Utility
	@subcategory = 0
	@title = TAC Waste Vent Port
	@description = This is a small purge vent that when opened can release waste and wastewater, preventing it from building up in your tanks.  It consumes a small amount of charge to operate the pump.
	@attachRules = 1,1,1,0,0

	@mass = 0.008
	
	!MODULE[ModuleEngines*]
	{
	}
	!MODULE[ModuleGimbal*]
	{
	}
	!MODULE[ModuleJettison*]
	{
	}
	!MODULE[ModuleAnimateHeat*]
	{
	}
	MODULE
	{
		name = TacGenericConverter
		converterName = Waste Venting
		conversionRate = 0.2
		inputResources = Waste, 1, ElectricCharge, 0.1
	}
	MODULE
	{
		name = TacGenericConverter
		converterName = Waste Water Venting
		conversionRate = 0.2
		inputResources = WasteWater, 3, ElectricCharge, 0.1
	}
}
+PART[TacWaterPurifierLarge]:FOR[KSPtM]
{
	//Adding ODT's WRS
	%RSSROConfig = True
	!MODULE[Tweakscale]
	{
	}
	@name = KSPtMorbiterWRS
	@title = KSPtM Orbiter WRS
	@description = KSPtM ODT WRS.  
	@mass = 8
	@scale = 1.722222
	@MODULE[TacGenericConverter]
	{
		@conversionRate = 1.0	// Already set at 4 people
		@inputResources = WasteWater, 0.000222498618, ElectricCharge, 0.743
		@outputResources = Water, 0.0001967777778, false, Waste, 0.00003577777777, true
	}
	!RESOURCE[*]
	{
	}
}
+PART[TacCarbonExtractor]:FOR[KSPtM]
{
	//Adding ODT's CDRA
	%RSSROConfig = True
	!MODULE[Tweakscale]
	{
	}
	@name = KSPtM Orbiter CDRA
	@mass = 0.6
	@description = KSPtM ODT CDRA.  Uses a 4-bed molecular sieve.  
	@MODULE[TacGenericConverter]
	{
		@conversionRate = 1.0	// Already set at 4 people
		@inputResources = CarbonDioxide, 0.02368060623, ElectricCharge, 0.42
		@outputResources = Waste, 0.00001540028759, true
	}
	!RESOURCE[*]
	{
	}
}